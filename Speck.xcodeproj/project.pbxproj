// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		"Speck::SpeckPackageTests::ProductTarget" /* SpeckPackageTests */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = OBJ_130 /* Build configuration list for PBXAggregateTarget "SpeckPackageTests" */;
			buildPhases = (
			);
			dependencies = (
				OBJ_133 /* PBXTargetDependency */,
				OBJ_134 /* PBXTargetDependency */,
			);
			name = SpeckPackageTests;
			productName = SpeckPackageTests;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		OBJ_105 /* Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* Array.swift */; };
		OBJ_106 /* Collection.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_18 /* Collection.swift */; };
		OBJ_107 /* Comparable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_19 /* Comparable.swift */; };
		OBJ_108 /* Dictionary.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_20 /* Dictionary.swift */; };
		OBJ_109 /* Equatable.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_21 /* Equatable.swift */; };
		OBJ_110 /* Expectation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_22 /* Expectation.swift */; };
		OBJ_111 /* Sequence.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_23 /* Sequence.swift */; };
		OBJ_112 /* String.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_24 /* String.swift */; };
		OBJ_113 /* VoidExpectation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_25 /* VoidExpectation.swift */; };
		OBJ_115 /* SpeckCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Speck::SpeckCore::Product" /* SpeckCore.framework */; };
		OBJ_121 /* BasicExpectation.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* BasicExpectation.swift */; };
		OBJ_122 /* Cursor.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* Cursor.swift */; };
		OBJ_123 /* Example.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* Example.swift */; };
		OBJ_124 /* Reporter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* Reporter.swift */; };
		OBJ_125 /* SpeckCore.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_13 /* SpeckCore.swift */; };
		OBJ_126 /* Status.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_14 /* Status.swift */; };
		OBJ_127 /* Suite.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* Suite.swift */; };
		OBJ_56 /* Package.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_6 /* Package.swift */; };
		OBJ_62 /* BasicExpectationTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_40 /* BasicExpectationTest.swift */; };
		OBJ_63 /* ExampleTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_41 /* ExampleTest.swift */; };
		OBJ_64 /* ReporterTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_42 /* ReporterTest.swift */; };
		OBJ_65 /* SuiteTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_43 /* SuiteTest.swift */; };
		OBJ_67 /* SpeckCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Speck::SpeckCore::Product" /* SpeckCore.framework */; };
		OBJ_75 /* ArrayTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_34 /* ArrayTest.swift */; };
		OBJ_76 /* CollectionTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_35 /* CollectionTest.swift */; };
		OBJ_77 /* ComparableTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_36 /* ComparableTest.swift */; };
		OBJ_78 /* DictionaryTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_37 /* DictionaryTest.swift */; };
		OBJ_79 /* ExpectationTest.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_38 /* ExpectationTest.swift */; };
		OBJ_81 /* SpeckAsserts.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Speck::SpeckAsserts::Product" /* SpeckAsserts.framework */; };
		OBJ_82 /* SpeckCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Speck::SpeckCore::Product" /* SpeckCore.framework */; };
		OBJ_91 /* Context.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_27 /* Context.swift */; };
		OBJ_92 /* Core.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_28 /* Core.swift */; };
		OBJ_93 /* Reporter.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_29 /* Reporter.swift */; };
		OBJ_94 /* expect.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_30 /* expect.swift */; };
		OBJ_95 /* run.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_31 /* run.swift */; };
		OBJ_97 /* SpeckAsserts.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Speck::SpeckAsserts::Product" /* SpeckAsserts.framework */; };
		OBJ_98 /* SpeckCore.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "Speck::SpeckCore::Product" /* SpeckCore.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		95066AE41F72CD37009EFCAA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Speck::SpeckAsserts";
			remoteInfo = SpeckAsserts;
		};
		95066AE51F72CD37009EFCAA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Speck::SpeckCore";
			remoteInfo = SpeckCore;
		};
		95066AE61F72CD37009EFCAA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Speck::SpeckCore";
			remoteInfo = SpeckCore;
		};
		95066AE71F72CD37009EFCAA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Speck::SpeckCore";
			remoteInfo = SpeckCore;
		};
		95066AE81F72CD37009EFCAA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Speck::SpeckAsserts";
			remoteInfo = SpeckAsserts;
		};
		95066AE91F72CD37009EFCAA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Speck::SpeckCore";
			remoteInfo = SpeckCore;
		};
		95066AEA1F72CD39009EFCAA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Speck::SpeckAssertsTests";
			remoteInfo = SpeckAssertsTests;
		};
		95066AEB1F72CD39009EFCAA /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "Speck::SpeckCoreTests";
			remoteInfo = SpeckCoreTests;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		OBJ_10 /* Cursor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Cursor.swift; sourceTree = "<group>"; };
		OBJ_11 /* Example.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Example.swift; sourceTree = "<group>"; };
		OBJ_12 /* Reporter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Reporter.swift; sourceTree = "<group>"; };
		OBJ_13 /* SpeckCore.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SpeckCore.swift; sourceTree = "<group>"; };
		OBJ_14 /* Status.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Status.swift; sourceTree = "<group>"; };
		OBJ_15 /* Suite.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Suite.swift; sourceTree = "<group>"; };
		OBJ_17 /* Array.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Array.swift; sourceTree = "<group>"; };
		OBJ_18 /* Collection.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Collection.swift; sourceTree = "<group>"; };
		OBJ_19 /* Comparable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Comparable.swift; sourceTree = "<group>"; };
		OBJ_20 /* Dictionary.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Dictionary.swift; sourceTree = "<group>"; };
		OBJ_21 /* Equatable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Equatable.swift; sourceTree = "<group>"; };
		OBJ_22 /* Expectation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Expectation.swift; sourceTree = "<group>"; };
		OBJ_23 /* Sequence.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Sequence.swift; sourceTree = "<group>"; };
		OBJ_24 /* String.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = String.swift; sourceTree = "<group>"; };
		OBJ_25 /* VoidExpectation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = VoidExpectation.swift; sourceTree = "<group>"; };
		OBJ_27 /* Context.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Context.swift; sourceTree = "<group>"; };
		OBJ_28 /* Core.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Core.swift; sourceTree = "<group>"; };
		OBJ_29 /* Reporter.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Reporter.swift; sourceTree = "<group>"; };
		OBJ_30 /* expect.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = expect.swift; sourceTree = "<group>"; };
		OBJ_31 /* run.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = run.swift; sourceTree = "<group>"; };
		OBJ_34 /* ArrayTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ArrayTest.swift; sourceTree = "<group>"; };
		OBJ_35 /* CollectionTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CollectionTest.swift; sourceTree = "<group>"; };
		OBJ_36 /* ComparableTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ComparableTest.swift; sourceTree = "<group>"; };
		OBJ_37 /* DictionaryTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = DictionaryTest.swift; sourceTree = "<group>"; };
		OBJ_38 /* ExpectationTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ExpectationTest.swift; sourceTree = "<group>"; };
		OBJ_40 /* BasicExpectationTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BasicExpectationTest.swift; sourceTree = "<group>"; };
		OBJ_41 /* ExampleTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ExampleTest.swift; sourceTree = "<group>"; };
		OBJ_42 /* ReporterTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = ReporterTest.swift; sourceTree = "<group>"; };
		OBJ_43 /* SuiteTest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = SuiteTest.swift; sourceTree = "<group>"; };
		OBJ_44 /* Docs */ = {isa = PBXFileReference; lastKnownFileType = folder; path = Docs; sourceTree = SOURCE_ROOT; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_9 /* BasicExpectation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = BasicExpectation.swift; sourceTree = "<group>"; };
		"Speck::Speck::Product" /* Speck.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Speck.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Speck::SpeckAsserts::Product" /* SpeckAsserts.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = SpeckAsserts.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Speck::SpeckAssertsTests::Product" /* SpeckAssertsTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; path = SpeckAssertsTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		"Speck::SpeckCore::Product" /* SpeckCore.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = SpeckCore.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"Speck::SpeckCoreTests::Product" /* SpeckCoreTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; path = SpeckCoreTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		OBJ_114 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_115 /* SpeckCore.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_128 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_66 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_67 /* SpeckCore.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_80 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_81 /* SpeckAsserts.framework in Frameworks */,
				OBJ_82 /* SpeckCore.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_96 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_97 /* SpeckAsserts.framework in Frameworks */,
				OBJ_98 /* SpeckCore.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		OBJ_16 /* SpeckAsserts */ = {
			isa = PBXGroup;
			children = (
				OBJ_17 /* Array.swift */,
				OBJ_18 /* Collection.swift */,
				OBJ_19 /* Comparable.swift */,
				OBJ_20 /* Dictionary.swift */,
				OBJ_21 /* Equatable.swift */,
				OBJ_22 /* Expectation.swift */,
				OBJ_23 /* Sequence.swift */,
				OBJ_24 /* String.swift */,
				OBJ_25 /* VoidExpectation.swift */,
			);
			name = SpeckAsserts;
			path = Sources/SpeckAsserts;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_26 /* Speck */ = {
			isa = PBXGroup;
			children = (
				OBJ_27 /* Context.swift */,
				OBJ_28 /* Core.swift */,
				OBJ_29 /* Reporter.swift */,
				OBJ_30 /* expect.swift */,
				OBJ_31 /* run.swift */,
			);
			name = Speck;
			path = Sources/Speck;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_32 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_33 /* SpeckAssertsTests */,
				OBJ_39 /* SpeckCoreTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_33 /* SpeckAssertsTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_34 /* ArrayTest.swift */,
				OBJ_35 /* CollectionTest.swift */,
				OBJ_36 /* ComparableTest.swift */,
				OBJ_37 /* DictionaryTest.swift */,
				OBJ_38 /* ExpectationTest.swift */,
			);
			name = SpeckAssertsTests;
			path = Tests/SpeckAssertsTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_39 /* SpeckCoreTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_40 /* BasicExpectationTest.swift */,
				OBJ_41 /* ExampleTest.swift */,
				OBJ_42 /* ReporterTest.swift */,
				OBJ_43 /* SuiteTest.swift */,
			);
			name = SpeckCoreTests;
			path = Tests/SpeckCoreTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_45 /* Products */ = {
			isa = PBXGroup;
			children = (
				"Speck::SpeckCoreTests::Product" /* SpeckCoreTests.xctest */,
				"Speck::SpeckAssertsTests::Product" /* SpeckAssertsTests.xctest */,
				"Speck::Speck::Product" /* Speck.framework */,
				"Speck::SpeckAsserts::Product" /* SpeckAsserts.framework */,
				"Speck::SpeckCore::Product" /* SpeckCore.framework */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_5 /*  */ = {
			isa = PBXGroup;
			children = (
				OBJ_6 /* Package.swift */,
				OBJ_7 /* Sources */,
				OBJ_32 /* Tests */,
				OBJ_44 /* Docs */,
				OBJ_45 /* Products */,
			);
			name = "";
			sourceTree = "<group>";
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* SpeckCore */,
				OBJ_16 /* SpeckAsserts */,
				OBJ_26 /* Speck */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* SpeckCore */ = {
			isa = PBXGroup;
			children = (
				OBJ_9 /* BasicExpectation.swift */,
				OBJ_10 /* Cursor.swift */,
				OBJ_11 /* Example.swift */,
				OBJ_12 /* Reporter.swift */,
				OBJ_13 /* SpeckCore.swift */,
				OBJ_14 /* Status.swift */,
				OBJ_15 /* Suite.swift */,
			);
			name = SpeckCore;
			path = Sources/SpeckCore;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"Speck::Speck" /* Speck */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_87 /* Build configuration list for PBXNativeTarget "Speck" */;
			buildPhases = (
				OBJ_90 /* Sources */,
				OBJ_96 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_99 /* PBXTargetDependency */,
				OBJ_100 /* PBXTargetDependency */,
			);
			name = Speck;
			productName = Speck;
			productReference = "Speck::Speck::Product" /* Speck.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Speck::SpeckAsserts" /* SpeckAsserts */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_101 /* Build configuration list for PBXNativeTarget "SpeckAsserts" */;
			buildPhases = (
				OBJ_104 /* Sources */,
				OBJ_114 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_116 /* PBXTargetDependency */,
			);
			name = SpeckAsserts;
			productName = SpeckAsserts;
			productReference = "Speck::SpeckAsserts::Product" /* SpeckAsserts.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Speck::SpeckAssertsTests" /* SpeckAssertsTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_71 /* Build configuration list for PBXNativeTarget "SpeckAssertsTests" */;
			buildPhases = (
				OBJ_74 /* Sources */,
				OBJ_80 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_83 /* PBXTargetDependency */,
				OBJ_85 /* PBXTargetDependency */,
			);
			name = SpeckAssertsTests;
			productName = SpeckAssertsTests;
			productReference = "Speck::SpeckAssertsTests::Product" /* SpeckAssertsTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"Speck::SpeckCore" /* SpeckCore */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_117 /* Build configuration list for PBXNativeTarget "SpeckCore" */;
			buildPhases = (
				OBJ_120 /* Sources */,
				OBJ_128 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SpeckCore;
			productName = SpeckCore;
			productReference = "Speck::SpeckCore::Product" /* SpeckCore.framework */;
			productType = "com.apple.product-type.framework";
		};
		"Speck::SpeckCoreTests" /* SpeckCoreTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_58 /* Build configuration list for PBXNativeTarget "SpeckCoreTests" */;
			buildPhases = (
				OBJ_61 /* Sources */,
				OBJ_66 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				OBJ_68 /* PBXTargetDependency */,
			);
			name = SpeckCoreTests;
			productName = SpeckCoreTests;
			productReference = "Speck::SpeckCoreTests::Product" /* SpeckCoreTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		"Speck::SwiftPMPackageDescription" /* SpeckPackageDescription */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_52 /* Build configuration list for PBXNativeTarget "SpeckPackageDescription" */;
			buildPhases = (
				OBJ_55 /* Sources */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = SpeckPackageDescription;
			productName = SpeckPackageDescription;
			productType = "com.apple.product-type.framework";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
				TargetAttributes = {
					"Speck::Speck" = {
						LastSwiftMigration = 0900;
					};
					"Speck::SpeckAsserts" = {
						LastSwiftMigration = 0900;
					};
					"Speck::SpeckAssertsTests" = {
						LastSwiftMigration = 0900;
					};
					"Speck::SpeckCore" = {
						LastSwiftMigration = 0900;
					};
					"Speck::SpeckCoreTests" = {
						LastSwiftMigration = 0900;
					};
				};
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "Speck" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = OBJ_5 /*  */;
			productRefGroup = OBJ_45 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"Speck::SwiftPMPackageDescription" /* SpeckPackageDescription */,
				"Speck::SpeckCoreTests" /* SpeckCoreTests */,
				"Speck::SpeckAssertsTests" /* SpeckAssertsTests */,
				"Speck::Speck" /* Speck */,
				"Speck::SpeckAsserts" /* SpeckAsserts */,
				"Speck::SpeckCore" /* SpeckCore */,
				"Speck::SpeckPackageTests::ProductTarget" /* SpeckPackageTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		OBJ_104 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_105 /* Array.swift in Sources */,
				OBJ_106 /* Collection.swift in Sources */,
				OBJ_107 /* Comparable.swift in Sources */,
				OBJ_108 /* Dictionary.swift in Sources */,
				OBJ_109 /* Equatable.swift in Sources */,
				OBJ_110 /* Expectation.swift in Sources */,
				OBJ_111 /* Sequence.swift in Sources */,
				OBJ_112 /* String.swift in Sources */,
				OBJ_113 /* VoidExpectation.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_120 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_121 /* BasicExpectation.swift in Sources */,
				OBJ_122 /* Cursor.swift in Sources */,
				OBJ_123 /* Example.swift in Sources */,
				OBJ_124 /* Reporter.swift in Sources */,
				OBJ_125 /* SpeckCore.swift in Sources */,
				OBJ_126 /* Status.swift in Sources */,
				OBJ_127 /* Suite.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_55 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_56 /* Package.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_61 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_62 /* BasicExpectationTest.swift in Sources */,
				OBJ_63 /* ExampleTest.swift in Sources */,
				OBJ_64 /* ReporterTest.swift in Sources */,
				OBJ_65 /* SuiteTest.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_74 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_75 /* ArrayTest.swift in Sources */,
				OBJ_76 /* CollectionTest.swift in Sources */,
				OBJ_77 /* ComparableTest.swift in Sources */,
				OBJ_78 /* DictionaryTest.swift in Sources */,
				OBJ_79 /* ExpectationTest.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_90 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_91 /* Context.swift in Sources */,
				OBJ_92 /* Core.swift in Sources */,
				OBJ_93 /* Reporter.swift in Sources */,
				OBJ_94 /* expect.swift in Sources */,
				OBJ_95 /* run.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		OBJ_100 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Speck::SpeckCore" /* SpeckCore */;
			targetProxy = 95066AE61F72CD37009EFCAA /* PBXContainerItemProxy */;
		};
		OBJ_116 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Speck::SpeckCore" /* SpeckCore */;
			targetProxy = 95066AE51F72CD37009EFCAA /* PBXContainerItemProxy */;
		};
		OBJ_133 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Speck::SpeckAssertsTests" /* SpeckAssertsTests */;
			targetProxy = 95066AEA1F72CD39009EFCAA /* PBXContainerItemProxy */;
		};
		OBJ_134 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Speck::SpeckCoreTests" /* SpeckCoreTests */;
			targetProxy = 95066AEB1F72CD39009EFCAA /* PBXContainerItemProxy */;
		};
		OBJ_68 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Speck::SpeckCore" /* SpeckCore */;
			targetProxy = 95066AE71F72CD37009EFCAA /* PBXContainerItemProxy */;
		};
		OBJ_83 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Speck::SpeckAsserts" /* SpeckAsserts */;
			targetProxy = 95066AE81F72CD37009EFCAA /* PBXContainerItemProxy */;
		};
		OBJ_85 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Speck::SpeckCore" /* SpeckCore */;
			targetProxy = 95066AE91F72CD37009EFCAA /* PBXContainerItemProxy */;
		};
		OBJ_99 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "Speck::SpeckAsserts" /* SpeckAsserts */;
			targetProxy = 95066AE41F72CD37009EFCAA /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		OBJ_102 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Speck.xcodeproj/SpeckAsserts_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SpeckAsserts;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_SWIFT3_OBJC_INFERENCE = Default;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SpeckAsserts;
			};
			name = Debug;
		};
		OBJ_103 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Speck.xcodeproj/SpeckAsserts_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SpeckAsserts;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_SWIFT3_OBJC_INFERENCE = Default;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SpeckAsserts;
			};
			name = Release;
		};
		OBJ_118 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Speck.xcodeproj/SpeckCore_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SpeckCore;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_SWIFT3_OBJC_INFERENCE = Default;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SpeckCore;
			};
			name = Debug;
		};
		OBJ_119 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Speck.xcodeproj/SpeckCore_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = SpeckCore;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_SWIFT3_OBJC_INFERENCE = Default;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SpeckCore;
			};
			name = Release;
		};
		OBJ_131 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Debug;
		};
		OBJ_132 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_NS_ASSERTIONS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				USE_HEADERMAP = NO;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				GCC_OPTIMIZATION_LEVEL = s;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				OTHER_SWIFT_FLAGS = "-DXcode";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
				SUPPORTED_PLATFORMS = "macosx iphoneos iphonesimulator appletvos appletvsimulator watchos watchsimulator";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = SWIFT_PACKAGE;
				SWIFT_OPTIMIZATION_LEVEL = "-Owholemodule";
				USE_HEADERMAP = NO;
			};
			name = Release;
		};
		OBJ_53 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 3 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/3 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
		OBJ_54 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				LD = /usr/bin/true;
				OTHER_SWIFT_FLAGS = "-swift-version 3 -I /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/pm/3 -target x86_64-apple-macosx10.10 -sdk /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk";
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
		OBJ_59 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Speck.xcodeproj/SpeckCoreTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_SWIFT3_OBJC_INFERENCE = On;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SpeckCoreTests;
			};
			name = Debug;
		};
		OBJ_60 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Speck.xcodeproj/SpeckCoreTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_SWIFT3_OBJC_INFERENCE = On;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SpeckCoreTests;
			};
			name = Release;
		};
		OBJ_72 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Speck.xcodeproj/SpeckAssertsTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_SWIFT3_OBJC_INFERENCE = On;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SpeckAssertsTests;
			};
			name = Debug;
		};
		OBJ_73 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Speck.xcodeproj/SpeckAssertsTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_SWIFT3_OBJC_INFERENCE = On;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = SpeckAssertsTests;
			};
			name = Release;
		};
		OBJ_88 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Speck.xcodeproj/Speck_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Speck;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_SWIFT3_OBJC_INFERENCE = Default;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Speck;
			};
			name = Debug;
		};
		OBJ_89 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = (
					"$(inherited)",
					"$(PLATFORM_DIR)/Developer/Library/Frameworks",
				);
				HEADER_SEARCH_PATHS = "$(inherited)";
				INFOPLIST_FILE = Speck.xcodeproj/Speck_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Speck;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SKIP_INSTALL = YES;
				SWIFT_SWIFT3_OBJC_INFERENCE = Default;
				SWIFT_VERSION = 4.0;
				TARGET_NAME = Speck;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		OBJ_101 /* Build configuration list for PBXNativeTarget "SpeckAsserts" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_102 /* Debug */,
				OBJ_103 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_117 /* Build configuration list for PBXNativeTarget "SpeckCore" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_118 /* Debug */,
				OBJ_119 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_130 /* Build configuration list for PBXAggregateTarget "SpeckPackageTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_131 /* Debug */,
				OBJ_132 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_2 /* Build configuration list for PBXProject "Speck" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_52 /* Build configuration list for PBXNativeTarget "SpeckPackageDescription" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_53 /* Debug */,
				OBJ_54 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_58 /* Build configuration list for PBXNativeTarget "SpeckCoreTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_59 /* Debug */,
				OBJ_60 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_71 /* Build configuration list for PBXNativeTarget "SpeckAssertsTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_72 /* Debug */,
				OBJ_73 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_87 /* Build configuration list for PBXNativeTarget "Speck" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_88 /* Debug */,
				OBJ_89 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
